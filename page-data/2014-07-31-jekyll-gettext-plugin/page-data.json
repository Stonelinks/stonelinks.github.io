{
    "componentChunkName": "component---src-templates-blog-post-tsx",
    "path": "/2014-07-31-jekyll-gettext-plugin/",
    "result": {"data":{"site":{"siteMetadata":{"title":"Stonelinks"}},"markdownRemark":{"id":"3db4ef22-9418-55d6-95d1-068755f1b8d9","excerpt":"https://github.com/Stonelinks/jekyll-gettext-plugin As the friendly neighborhood web developer at MUJIN, one of my responsibilities is our company’s website. I…","html":"<p><a href=\"https://github.com/Stonelinks/jekyll-gettext-plugin\">https://github.com/Stonelinks/jekyll-gettext-plugin</a></p>\n<p>As the friendly neighborhood web developer at MUJIN, one of my responsibilities is <a href=\"http://mujin.co.jp/\">our company’s website</a>. I made this site mostly by myself using <a href=\"http://jekyllrb.com/\">jekyll</a>, the static website generator that github uses for github pages by default.</p>\n<p>Jekyll is pretty awesome, but doesn’t support internationalization which we obviously need as a Japanese company. I got something really simple working with <a href=\"https://github.com/screeninteraction/jekyll-multiple-languages-plugin\">jekyll-multiple-languages-plugin</a>, but I wasn’t happy with it. The translation index had to be manually kept which was a giant pain (especially since non-technical people edit content on the site).</p>\n<p>As a long time django user, I really like the way it handles <a href=\"https://docs.djangoproject.com/en/dev/topics/i18n/\">internationalization</a>, namely the fact that the translation index was automatically updated as people edited content in the standard gettext <code class=\"language-text\">.po</code> file format.</p>\n<p>I endeavored to create such a solution for jekyll using ruby, something I was completely unfamiliar with. I learned some ruby basics, how <a href=\"https://rvm.io/\">rvm</a> and <a href=\"https://rubygems.org/\">RubyGems</a> work, and finally leveraged the existing libraries <a href=\"https://github.com/grosser/get_pomo\">get_pomo</a> and <a href=\"https://github.com/grosser/fast_gettext\">fast_gettext</a> which did a lot of the heavy lifting for me. You can read more about how to actually use my library over on <a href=\"https://github.com/Stonelinks/jekyll-gettext-plugin\">github</a>.</p>\n<p>I rounded out our internationalization solution by using the <a href=\"http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.4\">Accept-Language</a> header to redirect users to the website in their browser’s language (but still be able to override it by going to specific language endpoints). Here is the section from <code class=\"language-text\">.htaccess</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">RewriteEngine On\n\nRewriteCond %{HTTP:Accept-Language} ^en.*$ [NC]\nRewriteCond %{REQUEST_URI} ^/$ [NC]\nRewriteCond %{QUERY_STRING} !(^q\\=) [NC]\nRewriteRule ^(.*)$ /en/ [L,R=302]\n\nRewriteCond %{REQUEST_URI} ^/$ [NC]\nRewriteCond %{QUERY_STRING} !(^q\\=) [NC]\nRewriteRule ^(.*)$ /ja [L,R=302]\n</code></pre></div>","frontmatter":{"title":"Jekyll i18n","date":"July 31, 2014","description":null}},"previous":{"fields":{"slug":"/2014-07-31-butt-soup/"},"frontmatter":{"title":"Butt Soup"}},"next":{"fields":{"slug":"/2014-07-31-mt-major-drone/"},"frontmatter":{"title":"Mt. Major Drone Flight"}}},"pageContext":{"id":"3db4ef22-9418-55d6-95d1-068755f1b8d9","previousPostId":"4dee6109-5040-5b7c-99d4-a93a2bc9bf26","nextPostId":"1aff8901-54e5-5404-b8af-28c466b812ef"}},
    "staticQueryHashes": ["1632011873","2841359383"]}